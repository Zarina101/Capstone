filter(full_part=="FT" & term_year=="2021")%>%
filter(HS_classify=="MCPS")%>%
group_by(term_year,high_school)%>%
count(high_school)%>%
group_by(term_year)%>%
mutate(total_pop =sum(n))%>%
group_by(high_school)%>%
arrange(term_year,.by_group=TRUE)%>%
mutate(pct_pop= (n/total_pop*100))%>%
arrange(desc(pct_pop))
v2<-df_Degrees %>%
group_by(term_year,full_part) %>%
filter(full_part=="FT" & term_year=="2021")%>%
filter(HS_classify=="MCPS")%>%
count(high_school) %>%
mutate(prop = n/sum(n)) %>%
ggplot(aes(x = high_school, y = prop)) +
geom_col(aes(fill=high_school), position = "dodge") +
geom_text(aes(label = scales::percent(prop,0.5),
y = prop,
group = high_school),
position = position_dodge(width = 0.9),
vjust = 0, size =3,hjust=0)+
#  facet_wrap(~term_year )+
ggtitle("High Schools Full time students in term year 2021 graduated")+
ylab('Proportion ')+
xlab("")+
theme(legend.position = "none", axis.text.x=element_blank(),strip.background = element_blank(),panel.grid = element_blank())
v2+ coord_flip()
# calculate percentage change in full time student enrollment from 2020 to 2021 by MCPS highschool
df_Degrees%>%
filter(full_part=="FT")%>%
filter(HS_classify=="MCPS")%>%
group_by(term_year,high_school)%>%
count(high_school)%>%
group_by(term_year)%>%
group_by(high_school)%>%
arrange(term_year,.by_group=TRUE)%>%
mutate(pct_change= (n-lag(n))/lag(n)*100)
q1<- df_Degrees %>%
group_by(term_year,full_part) %>%
filter(full_part=="PT" & term_year=="2020")%>%
filter(HS_classify=="MCPS")%>%
count(high_school) %>%
mutate(prop = n/sum(n)) %>%
ggplot(aes(x = high_school, y = prop)) +
geom_col(aes(fill=high_school), position = "dodge") +
geom_text(aes(label = scales::percent(prop,0.5),
y = prop,
group = high_school),
position = position_dodge(width = 0.9),
vjust = 0, size=3, hjust=0)+
#  facet_wrap(~term_year )+
ggtitle("High schools Part time students graduated in term year 2020 graduated")+
ylab('Proportion ')+
xlab("")+
theme(legend.position = "none", axis.text.x=element_blank(),strip.background = element_blank(),panel.grid = element_blank())
q1+ coord_flip()
q2<- df_Degrees %>%
group_by(term_year,full_part) %>%
filter(full_part=="PT" & term_year=="2021")%>%
filter(HS_classify=="MCPS")%>%
count(high_school) %>%
mutate(prop = n/sum(n)) %>%
ggplot(aes(x = high_school, y = prop)) +
geom_col(aes(fill=high_school), position = "dodge") +
geom_text(aes(label = scales::percent(prop,0.5),
y = prop,
group = high_school),
position = position_dodge(width = 0.9),
vjust = 0, size=3, hjust=0)+
#  facet_wrap(~term_year )+
ggtitle("High schools Part time students graduated in term year 2020 graduated")+
ylab('Proportion ')+
xlab("")+
theme(legend.position = "none", axis.text.x=element_blank(),strip.background = element_blank(),panel.grid = element_blank())
q2+ coord_flip()
df_Degrees%>%
filter(full_part=="PT" & term_year=="2020")%>%
filter(HS_classify=="MCPS")%>%
group_by(term_year,high_school)%>%
count(high_school)%>%
group_by(term_year)%>%
mutate(total_pop =sum(n))%>%
group_by(high_school)%>%
arrange(term_year,.by_group=TRUE)%>%
mutate(pct_pop= (n/total_pop*100))%>%
arrange(desc(pct_pop))
df_Degrees%>%
filter(full_part=="PT" & term_year=="2021")%>%
filter(HS_classify=="MCPS")%>%
group_by(term_year,high_school)%>%
count(high_school)%>%
group_by(term_year)%>%
mutate(total_pop =sum(n))%>%
group_by(high_school)%>%
arrange(term_year,.by_group=TRUE)%>%
mutate(pct_pop= (n/total_pop*100))%>%
arrange(desc(pct_pop))
# calculate percentage change in part time student enrollment from 2020 to 2021 by MCPS highschool
df_Degrees%>%
filter(full_part=="PT")%>%
filter(HS_classify=="MCPS")%>%
group_by(term_year,high_school)%>%
count(high_school)%>%
group_by(term_year)%>%
group_by(high_school)%>%
arrange(term_year,.by_group=TRUE)%>%
mutate(pct_change= (n-lag(n))/lag(n)*100)
z1<- df_Degrees%>%
filter(full_part=="FT" &term_year =="2020")%>%
ggplot(., aes(x=major, fill=major)) +
geom_bar() +
geom_text(stat='count', aes(label=..count..), vjust=0, hjust=0, size =3)+
ggtitle("Majors of Full-time Students in 2020  ")+
xlab("Major")+
ylab("Frequency")+
theme(legend.position = "none")
z1 + coord_flip()
z13<- df_Degrees%>%
filter(full_part=="FT" &term_year =="2021")%>%
ggplot(., aes(x=major, fill=major)) +
geom_bar() +
geom_text(stat='count', aes(label=..count..), vjust=0, hjust=0, size =3)+
ggtitle("Majors of Full-time Students in 2021  ")+
xlab("Major")+
ylab("Frequency")+
theme(legend.position = "none")
z13 + coord_flip()
df_Degrees%>%
filter(full_part=="FT")%>%
group_by(term_year,major)%>%
count(major)%>%
group_by(term_year)%>%
group_by(major)%>%
arrange(term_year,.by_group=TRUE)%>%
mutate(pct_change= (n-lag(n))/lag(n)*100)
z11<- df_Degrees%>%
filter(full_part=="PT" &term_year =="2020")%>%
ggplot(., aes(x=major, fill=major)) +
geom_bar() +
geom_text(stat='count', aes(label=..count..), vjust=0, hjust=0, size =3)+
ggtitle("Majors of Part-time Students in 2020  ")+
xlab("Major")+
ylab("Frequency")+
theme(legend.position = "none")
z11 + coord_flip()
z12<- df_Degrees%>%
filter(full_part=="PT" &term_year =="2021")%>%
ggplot(., aes(x=major, fill=major)) +
geom_bar() +
geom_text(stat='count', aes(label=..count..), vjust=0, hjust=0, size =3)+
ggtitle("Majors of Part-time Students in 2021  ")+
xlab("Major")+
ylab("Frequency")+
theme(legend.position = "none")
z12 + coord_flip()
df_Degrees%>%
filter(full_part=="PT")%>%
group_by(term_year,major)%>%
count(major)%>%
group_by(term_year)%>%
group_by(major)%>%
arrange(term_year,.by_group=TRUE)%>%
mutate(pct_change= (n-lag(n))/lag(n)*100)
#count number of full time versus part-time degree students.
df_Degrees%>% group_by(term_year,full_part)%>%
count(summer1=='Y')
# AP credits can be given for courses taken at highschool.
#Check number of students with hours_earned greater than hours_attempted
df_Degrees %>% count(hours_attempted<hours_earned)
p <- ggplot(df_Degrees, aes(x = hours_attempted))+ geom_histogram(aes(fill = term_year))
p1<- p + facet_wrap(~full_part)
p1
p11 = ggplot(df_Degrees, aes(hours_attempted))
p11 + geom_boxplot(aes(colour = term_year)) +
facet_wrap(~full_part)
ggplot(df_Degrees, aes(hours_attempted, fill = term_year)) + geom_density(alpha = 0.2) +
facet_wrap(~full_part)+
xlab("Hours attempted") +
ylab( "Density")
df_Degrees%>% group_by(term_year,full_part)%>%
summarise(n = n(),
min = fivenum(hours_attempted)[1],
Q1 = fivenum(hours_attempted)[2],
median = fivenum(hours_attempted)[3],
Q3 = fivenum(hours_attempted)[4],
max = fivenum(hours_attempted)[5],
mean= mean(hours_attempted),
sd = sd(hours_attempted))
d1<-df_Degrees%>%
filter(full_part=="FT")%>%
filter(term_year=="2020")%>%
dplyr::select(hours_attempted)
d2<-df_Degrees%>%
filter(full_part=="FT")%>%
filter(term_year=="2021")%>%
dplyr::select(hours_attempted)
sband(d1,d2)
df_Degrees%>% group_by(term_year,full_part)%>%
count(hours_attempted<3)
df_Degrees%>% group_by(term_year,full_part)%>%
count(hours_attempted>18)
p <- ggplot(df_Degrees, aes(x = hours_earned))+ geom_histogram(aes(fill = term_year))
p1<- p + facet_wrap(~full_part)
p1
p11 = ggplot(df_Degrees, aes(hours_earned))
p11 + geom_boxplot(aes(colour = term_year)) +
facet_wrap(~full_part)
ggplot(df_Degrees, aes(hours_earned, fill = term_year)) + geom_density(alpha = 0.2) +
facet_wrap(~full_part)+
xlab("Hours Earned") +
ylab( "Density")
df_Degrees%>% group_by(term_year,full_part)%>%
summarise(n = n(),
min = fivenum(hours_earned)[1],
Q1 = fivenum(hours_earned)[2],
median = fivenum(hours_earned)[3],
Q3 = fivenum(hours_earned)[4],
max = fivenum(hours_earned)[5],
mean= mean(hours_earned),
sd = sd(hours_earned))
d1<- df_Degrees%>%filter(full_part=="FT")
p<-qplot(sample = hours_earned, data = d1, color=term_year)
p
df_Degrees%>% group_by(term_year,full_part)%>%
count(hours_earned<3)
df_Degrees%>% group_by(term_year,full_part)%>%
count(hours_earned>18)
# create variable pass_earned_hours
# hours_earned_rate = hours_earned/hours_attempted
df_Degrees<-df_Degrees %>%
mutate(hours_earned_rate=hours_earned/hours_attempted)
ggplot(df_Degrees, aes(hours_earned_rate, fill = term_year)) + geom_density(alpha = 0.3) +
facet_wrap(~full_part)+
xlab("Hours Earned Rate") +
ylab( "Density")+
xlim(0,1)
df_Degrees<-df_Degrees %>%
mutate(unearned_hours = hours_attempted-hours_earned)
ggplot(df_Degrees, aes(unearned_hours, fill = term_year)) + geom_density(alpha = 0.3) +
facet_wrap(~full_part)+
xlab("Unearned hours") +
ylab( "Density") +
xlim (0,18)
library(GGally)
# plot distributions and correlation of variables
df_Degrees%>% filter(term_year=="2020")%>%
filter(full_part=="FT")%>%
ggpairs(., columns = c("hours_attempted","hours_earned", "mc_gpa","hours_earned_rate","unearned_hours"))
p <- ggplot(df_Degrees, aes(x = GPA))+ geom_histogram(aes(fill = term_year))
p7<- p + facet_wrap(~full_part)
p7
View(df_Degrees)
View(df_Degrees)
p <- ggplot(df_Degrees, aes(x = mc_gpa))+ geom_histogram(aes(fill = term_year))
p7<- p + facet_wrap(~full_part)
p7
p15 = ggplot(df_Degrees, aes(mc_gpa))
p15 + geom_boxplot(aes(colour = term_year)) +
facet_wrap(~full_part)
ggplot(df_Degrees, aes(mc_gpa, fill = term_year)) + geom_density(alpha = 0.2) +
facet_wrap(~full_part)+
xlab("GPA") +
ylab( "Density")
df_Degrees%>% group_by(term_year,full_part)%>%
summarise(n = n(),
min = fivenum(mc_gpa)[1],
Q1 = fivenum(mc_gpa)[2],
median = fivenum(mc_gpa)[3],
Q3 = fivenum(mc_gpa)[4],
max = fivenum(mc_gpa)[5],
mean= mean(mc_gpa),
sd = sd(mc_gpa))
knitr::opts_chunk$set(echo = TRUE)
p_hat=(69+2)/(339+4)
p_hat
n=339
y=69
p_hat=(y+2)/(n+4)
p_hat
n=339
y=69
p_hat=(y+2)/(n+4)
p_hat
se= sqrt((p_hat*(1-p_hat))/(n+4))
n=339
y=69
p_hat=(y+2)/(n+4)
p_hat
se= sqrt((p_hat*(1-p_hat))/(n+4))
se
n=339
y=69
p_hat=(y+2)/(n+4)
p_hat
se= sqrt((p_hat*(1-p_hat))/(n+4))
s=sqrt(0.2*0.8/(443))
se
n=339
y=69
p_hat=(y+2)/(n+4)
p_hat
se= sqrt((p_hat*(1-p_hat))/(n+4))
s=sqrt(0.2*0.8/(443))
s
se
n=339
y=69
p_hat=(y+2)/(n+4)
p_hat
se= sqrt((p_hat*(1-p_hat))/(n+4))
se
p_low= p_hat+1.96*se
p_upper=phat+1.96*se
n=339
y=69
p_hat=(y+2)/(n+4)
p_hat
se= sqrt((p_hat*(1-p_hat))/(n+4))
se
p_low= p_hat+1.96*se
p_upper=p_hat+1.96*se
n=339
y=69
p_hat=(y+2)/(n+4)
p_hat
se= sqrt((p_hat*(1-p_hat))/(n+4))
se
p_low= p_hat+1.96*se
p_upper=p_hat+1.96*se
p_lower
n=339
y=69
p_hat=(y+2)/(n+4)
p_hat
se= sqrt((p_hat*(1-p_hat))/(n+4))
se
p_lower= p_hat+1.96*se
p_upper=p_hat+1.96*se
p_lower
p_upper
n=339
y=69
p_hat=(y+2)/(n+4)
p_hat
se= sqrt((p_hat*(1-p_hat))/(n+4))
se
p_lower= p_hat-1.96*se
p_upper=p_hat+1.96*se
p_lower
p_upper
deermatrix<-matrix(c(216,266,716,666),ncol=2,byrow=TRUE)
rownames(deermatrix)<-c("weekend","weekday")
colnames(deermatrix)<-c("observed","expected")
deermatrix <- as.table(deermatrix)
deermatrix
deermatrix<-matrix(c(216,266,716,666),ncol=2,byrow=TRUE)
rownames(deermatrix)<-c("weekend","weekday")
colnames(deermatrix)<-c("observed","expected")
deermatrix <- as.table(deermatrix)
deermatrix
null.probs = c(2/7,5/7)
deerdist = c(216,716)
hisq.test(deerdist, p=null.probs)  # p is not the second option, so must be labeled
deermatrix<-matrix(c(216,266,716,666),ncol=2,byrow=TRUE)
rownames(deermatrix)<-c("weekend","weekday")
colnames(deermatrix)<-c("observed","expected")
deermatrix <- as.table(deermatrix)
deermatrix
null.probs = c(2/7,5/7)
deerdist = c(216,716)
chisq.test(deerdist, p=null.probs)  # p is not the second option, so must be labeled
deermatrix<-matrix(c(216,266,716,666),ncol=2,byrow=TRUE)
rownames(deermatrix)<-c("weekend","weekday")
colnames(deermatrix)<-c("observed","expected")
deermatrix <- as.table(deermatrix)
deermatrix
null.probs = c(2/7,5/7)
births = c(216,716)
chisq.test(births, p=null.probs)  # p is not the second option, so must be labeled
birthsmatrix<-matrix(c(216,266,716,666),ncol=2,byrow=TRUE)
rownames(birthsmatrix)<-c("weekend","weekday")
colnames(birthsmatrix)<-c("observed","expected")
birthsmatrix <- as.table(birthsmatrix)
birthsmatrix
null.probs = c(2/7,5/7)
births = c(216,716)
chisq.test(births, p=null.probs)  # p is not the second option, so must be labeled
null.probs = c(9/16,3/16,3/16,1/16)
births = c(111,37,34,8)
chisq.test(births, p=null.probs)  # p is not the second option, so must be labeled
detach("package:BHH2", unload = TRUE)
wilt<-c(11,17)
no_wilt<-c(15,4)
test<-data.frame(wilt,no_wilt)
test
wilt<-c(11,17)
no_wilt<-c(15,4)
test<-data.frame(wilt,no_wilt)
test
chisq.test(test)
birthsmatrix<-matrix(c(216,266,716,666),ncol=2,byrow=TRUE)
rownames(birthsmatrix)<-c("weekend","weekday")
colnames(birthsmatrix)<-c("observed","expected")
birthsmatrix <- as.table(birthsmatrix)
birthsmatrix
null.probs = c(2/7,5/7)
births = c(216,716)
chisq.test(births, p=null.probs)  # p is not the second option, so must be labeled
birthsmatrix<-matrix(c(216,266,716,666),ncol=2,byrow=TRUE)
rownames(birthsmatrix)<-c("wilts disease","no wilts disease")
colnames(birthsmatrix)<-c("mites","no mites")
birthsmatrix <- as.table(birthsmatrix)
birthsmatrix
birthsmatrix<-matrix(c(11/26,17/21,15/26,4/21),ncol=2,byrow=TRUE)
rownames(birthsmatrix)<-c("wilts disease","no wilts disease")
colnames(birthsmatrix)<-c("mites","no mites")
birthsmatrix <- as.table(birthsmatrix)
birthsmatrix
wilt<-c(11,17)
no_wilt<-c(15,4)
test<-data.frame(wilt,no_wilt)
test
chisq.test(test)
birthsmatrix<-matrix(c(11/17,14/20,6/17,6/20),ncol=2,byrow=TRUE)
rownames(birthsmatrix)<-c("seizures","no seizures")
colnames(birthsmatrix)<-c("Phenytoin","Valproate")
birthsmatrix <- as.table(birthsmatrix)
birthsmatrix
seizures<-c(11,14)
no_seizures<-c(6,6)
test<-data.frame(seizures,no_seizures)
test
chisq.test(test)
seizures<-c(11,14)
no_seizures<-c(6,6)
test<-data.frame(seizures,no_seizures)
test
chisq.test(test)
died<-c(83,106)
alive<-c(264,242)
test<-data.frame(died,alive)
test
chisq.test(test)
p1=25/(25+492)
p2=23/(23/614)
p1
p2
p1=25/(25+492)
p2=23/(23+614)
p1
p2
p1=25/(25+492)
p2=23/(23+614)
p1
p2
relativeRisk=p1/p2
relativeRisk
p1=25/(25+492)
p2=23/(23+614)
p1
p2
relativeRisk=p1/p2
relativeRisk
oddsRatio=(25*614)/(23*492)
oddsRatio
p1=12/(12+93)
p2=8/(8+84)
p1
p2
relativeRisk=p1/p2
relativeRisk
oddsRatio=(12*84)/(8*93)
oddsRatio
p1=3995/(46941)
p2=221/(5228)
p1
p2
relativeRisk=p1/p2
relativeRisk
oddsRatio=(3995*5007)/(221*42946)
oddsRatio
knitr::opts_chunk$set(echo = TRUE)
sqrt(0.407(1-0.407)/27)
sqt(0.407(1-0.407)/27)
sqrt(0.407(1-0.407)/27)
(0.407(1-0.407)/27)
0.407*(1-0.407)/27
sqrt(0.407*(1-0.407)/27)
sqrt(0.407*(1-0.407)/27)
(9+2)/(23+4) = 11/27
sqrt(0.407*(1-0.407)/27)
11/27
sqrt(0.407*(1-0.407)/27)
11/27+sqrt(0.407*(1-0.407)/27)
sqrt(0.407*(1-0.407)/27)
11/27+sqrt(0.407*(1-0.407)/27)
11/27-sqrt(0.407*(1-0.407)/27)
null.probs = c(1/4,1/4,1/4,1/4)
births = c(167, 176, 174, 194)
chisq.test(births, p=null.probs)
null.probs = c(1/4,1/4,1/4,1/4)
eggs = c(167, 176, 174, 194)
chisq.test(eggs, p=null.probs)
(11/63) / (8/62)=
(11/63)/(8/62)
hiv_test<-c(11,8)
no_hiv_test<-c(52,54)
test<-data.frame(hiv_test,no_hiv_test)
test
chisq.test(test)
